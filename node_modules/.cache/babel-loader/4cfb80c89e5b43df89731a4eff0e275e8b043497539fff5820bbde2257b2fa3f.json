{"ast":null,"code":"import _objectSpread from\"/Users/seanjoudry/Documents/NSPoliDonations/my-csv-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useMemo,useCallback}from'react';import{Helmet}from'react-helmet';import Papa from'papaparse';import{motion}from'framer-motion';import{Search}from'lucide-react';// Local images from src/assets\nimport nspcLogo from'./assets/nspc_logo.jpg';import nsndpLogo from'./assets/nsndp_logo.jpg';import nslpLogo from'./assets/nslp-logo.png';import cpcLogo from'./assets/cpclogo.png';import ndpcaLogo from'./assets/ndpcalogo.jpg';import lpcLogo from'./assets/lpclogo.jpg';import icon from'./assets/icon.png';/** Debounce hook to reduce lag when filtering large data */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function useDebounce(value){let delay=arguments.length>1&&arguments[1]!==undefined?arguments[1]:300;const[debouncedValue,setDebouncedValue]=useState(value);useEffect(()=>{const handler=setTimeout(()=>setDebouncedValue(value),delay);return()=>clearTimeout(handler);},[value,delay]);return debouncedValue;}/** Our final, unified columns in a fixed order. */const allColumns=['Last Name','First Name','Postal Code','City','Party','Specific Campaign','Date','Donation'];export default function App(){const[csvData,setCsvData]=useState([]);const[searchTerm,setSearchTerm]=useState('');const debouncedSearch=useDebounce(searchTerm,300);// Sorting state\nconst[sortConfig,setSortConfig]=useState({key:null,order:'asc'});function handleSortClick(header){setSortConfig(prev=>{if(prev.key===header){return _objectSpread(_objectSpread({},prev),{},{order:prev.order==='asc'?'desc':'asc'});}else{return{key:header,order:'asc'};}});}// Parse & combine both CSVs in one useEffect\nuseEffect(()=>{// 1) Parse data.csv (the provincial file)\nPapa.parse('./data.csv',{download:true,header:true,skipEmptyLines:true,complete:provincialResults=>{const provincialData=provincialResults.data.map(row=>({// For data.csv:\n// Last Name, First Name, Town => City, Amount => Donation, Year => Date\n'Last Name':row['Last Name']||'','First Name':row['First Name']||'','Postal Code':'',// No postal code in data.csv\nCity:row['Town']||'',// rename 'Town' => 'City'\nParty:row['Party']||'','Specific Campaign':row['Specific Campaign']||'',Date:row['Year']||'',// rename 'Year' => 'Date'\nDonation:row['Amount']||''// rename 'Amount' => 'Donation'\n}));// 2) Parse federaldata.csv\nPapa.parse('./federaldata.csv',{download:true,header:true,skipEmptyLines:true,complete:federalResults=>{const federalData=federalResults.data.map(row=>{// Possibly shorten “Conservative Party of Canada” -> “CPC”\nlet party=row['Party']||'';if(party.includes('Conservative Party of Canada')){party='CPC';}if(party.includes('Liberal Party of Canada')){party='LPC';}if(party.includes('New Democratic Party')){party='NDP-CA';}let recipient=row['Recipient']||'';if(recipient.includes('Conservative Party of Canada')){recipient='CPC';}if(party.includes('Liberal Party of Canada')){party='LPC';}if(party.includes('New Democratic Party')){party='NDP-CA';}return{// For federaldata.csv:\n// Date_received => Date, Monetary => Donation\n'Last Name':row['Last Name']||'','First Name':row['First Name']||'','Postal Code':row['Postal Code']||'',City:row['City']||'',Party:party,'Specific Campaign':recipient,Date:row['Date_received']||'',Donation:row['Monetary']||''};});// Combine them\nconst combined=[...provincialData,...federalData];setCsvData(combined);}});}});},[]);// 1) Wrap sortData in a useCallback\nconst sortData=useCallback(data=>{if(!sortConfig.key)return data;const{key,order}=sortConfig;const sorted=[...data].sort((a,b)=>{var _a$key,_b$key;let aVal=(_a$key=a[key])!==null&&_a$key!==void 0?_a$key:'';let bVal=(_b$key=b[key])!==null&&_b$key!==void 0?_b$key:'';// numeric parse attempt\nconst aNum=parseFloat(String(aVal).replace(/[$,]/g,''));const bNum=parseFloat(String(bVal).replace(/[$,]/g,''));const isNumericA=!isNaN(aNum);const isNumericB=!isNaN(bNum);if(isNumericA&&isNumericB){return order==='asc'?aNum-bNum:bNum-aNum;}else{// string compare\naVal=aVal.toLowerCase();bVal=bVal.toLowerCase();if(aVal<bVal)return order==='asc'?-1:1;if(aVal>bVal)return order==='asc'?1:-1;return 0;}});return sorted;},[sortConfig]);function getRowColor(){let partyValue=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';const p=partyValue.toLowerCase();// EXACT matches\nif(p==='cpc')return'#639ee0';if(p==='lpc')return'#9d0001';if(p==='pc')return'#00becf';// partial matches\nif(p.includes('liberal'))return'red';if(p.includes('ndp'))return'orange';if(p.includes('green'))return'green';if(p.includes('atlantica'))return'purple';return'';}// 1) Extended getPartyTotals with explicit checks for nsndp, ndp-ca, ndp\nfunction getPartyTotals(data){// Add nsndp and ndp to the totals object\nconst totals={pc:0,cpc:0,nsndp:0,// for exactly 'nsndp'\nndp:0,// for exactly 'ndp'\nndpca:0,// for exactly 'ndp-ca'\nliberal:0,lpc:0};data.forEach(row=>{const amountStr=row['Donation']||'0';const amount=parseFloat(amountStr.replace(/[$,]/g,''))||0;const p=(row['Party']||'').toLowerCase();if(p==='pc'){totals.pc+=amount;}else if(p==='cpc'){totals.cpc+=amount;}else if(p==='nsndp'){totals.nsndp+=amount;}else if(p==='ndp-ca'){totals.ndpca+=amount;}else if(p==='ndp'){// strictly 'ndp' goes here\ntotals.ndp+=amount;}else if(p.includes('liberal')){totals.liberal+=amount;}else if(p.includes('lpc')){totals.lpc+=amount;}});return totals;}// Filter by \"LastName FirstName\"\nconst filteredData=useMemo(()=>{if(!debouncedSearch)return[];const[lastNameSearch,firstNameSearch]=debouncedSearch.split(/\\s+/,2).map(s=>s.toLowerCase());return csvData.filter(row=>{const rowLast=(row['Last Name']||'').toLowerCase();const rowFirst=(row['First Name']||'').toLowerCase();if(!firstNameSearch){return rowLast.includes(lastNameSearch);}else{return rowLast.includes(lastNameSearch)&&rowFirst.includes(firstNameSearch);}});},[debouncedSearch,csvData]);// 2) UseMemo depends on [filteredData, sortData]\nconst sortedFilteredData=useMemo(()=>{return sortData(filteredData);},[filteredData,sortData]);// Totals\nconst partyTotals=useMemo(()=>getPartyTotals(sortedFilteredData),[sortedFilteredData]);return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen w-full p-6 flex flex-col items-center text-white bg-gradient-to-b from-blue-900 to-gray-900\",children:[/*#__PURE__*/_jsxs(Helmet,{children:[/*#__PURE__*/_jsx(\"title\",{children:\"NSPoli Donors\"}),/*#__PURE__*/_jsx(\"meta\",{name:\"description\",content:\"Search through political donations in Nova Scotia\"}),/*#__PURE__*/_jsx(\"link\",{rel:\"icon\",type:\"image/png\",href:icon}),/*#__PURE__*/_jsx(\"meta\",{name:\"robots\",content:\"noindex, nofollow\"})]}),/*#__PURE__*/_jsx(motion.h1,{initial:{opacity:0,y:-20},animate:{opacity:1,y:0},className:\"text-4xl font-extrabold mb-8\",children:\"NSPOLI Donors\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-full max-w-5xl bg-white text-gray-800 rounded-2xl shadow-xl p-6 flex flex-col gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(Search,{className:\"absolute left-3 top-3 text-gray-400\",size:20}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),placeholder:\"Enter 'LastName FirstName'\",className:\"pl-10 pr-4 py-2 w-full border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400\"})]}),debouncedSearch&&/*#__PURE__*/_jsx(\"div\",{className:\"overflow-auto border border-gray-200 rounded-md\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full text-left\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-100 border-b border-gray-200\",children:/*#__PURE__*/_jsx(\"tr\",{children:allColumns.map(header=>/*#__PURE__*/_jsxs(\"th\",{onClick:()=>handleSortClick(header),className:\"px-4 py-2 text-gray-700 font-semibold cursor-pointer select-none\",children:[header,sortConfig.key===header&&/*#__PURE__*/_jsx(\"span\",{className:\"ml-1 text-xs\",children:sortConfig.order==='asc'?'▲':'▼'})]},header))})}),/*#__PURE__*/_jsx(\"tbody\",{children:sortedFilteredData.map((row,index)=>{const partyValue=row['Party']||'';return/*#__PURE__*/_jsx(\"tr\",{className:\"border-b hover:bg-gray-50 transition-colors\",style:{backgroundColor:getRowColor(partyValue)||undefined},children:allColumns.map(col=>{var _row$col;return/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2\",children:(_row$col=row[col])!==null&&_row$col!==void 0?_row$col:''},col);})},index);})})]})})]}),debouncedSearch&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 w-full max-w-3xl bg-white text-gray-800 rounded-2xl shadow-xl p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-bold mb-4\",children:\"Total Amount Donated\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"img\",{src:nspcLogo,alt:\"PC Party Logo\",className:\"w-10 h-10 rounded-full mr-3\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold\",children:\"PC:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"ml-2\",children:[\"$\",partyTotals.pc.toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"img\",{src:cpcLogo,alt:\"CPC Logo\",className:\"w-10 h-10 rounded-full mr-3\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold\",children:\"CPC:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"ml-2\",children:[\"$\",partyTotals.cpc.toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"img\",{src:nsndpLogo,alt:\"NSNDP Logo\",className:\"w-10 h-10 rounded-full mr-3\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold\",children:\"NSNDP:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"ml-2\",children:[\"$\",partyTotals.nsndp.toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"img\",{src:ndpcaLogo,alt:\"NDPCA Logo\",className:\"w-10 h-10 rounded-full mr-3\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold\",children:\"NDPCA:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"ml-2\",children:[\"$\",partyTotals.ndpca.toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"img\",{src:nslpLogo,alt:\"Liberal Logo\",className:\"w-10 h-10 rounded-full mr-3\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold\",children:\"Liberal:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"ml-2\",children:[\"$\",partyTotals.liberal.toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"img\",{src:lpcLogo,alt:\"LPC Logo\",className:\"w-10 h-10 rounded-full mr-3\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold\",children:\"LPC:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"ml-2\",children:[\"$\",partyTotals.lpc.toFixed(2)]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-center mt-6\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Collected from Elections Nova Scotia covering from 2005-2024. Only donations of $200 or more are publicly reported from 2010 onward. Federal data from 2016-2024. Note there may be duplicate records in federal data.\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-1\",children:\"Type your Last Name followed by a space, then First Name. Click table headers to sort.\"})]})]});}","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","Helmet","Papa","motion","Search","nspcLogo","nsndpLogo","nslpLogo","cpcLogo","ndpcaLogo","lpcLogo","icon","jsx","_jsx","jsxs","_jsxs","useDebounce","value","delay","arguments","length","undefined","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","allColumns","App","csvData","setCsvData","searchTerm","setSearchTerm","debouncedSearch","sortConfig","setSortConfig","key","order","handleSortClick","header","prev","_objectSpread","parse","download","skipEmptyLines","complete","provincialResults","provincialData","data","map","row","City","Party","Date","Donation","federalResults","federalData","party","includes","recipient","combined","sortData","sorted","sort","a","b","_a$key","_b$key","aVal","bVal","aNum","parseFloat","String","replace","bNum","isNumericA","isNaN","isNumericB","toLowerCase","getRowColor","partyValue","p","getPartyTotals","totals","pc","cpc","nsndp","ndp","ndpca","liberal","lpc","forEach","amountStr","amount","filteredData","lastNameSearch","firstNameSearch","split","s","filter","rowLast","rowFirst","sortedFilteredData","partyTotals","className","children","name","content","rel","type","href","h1","initial","opacity","y","animate","size","onChange","e","target","placeholder","onClick","index","style","backgroundColor","col","_row$col","src","alt","toFixed"],"sources":["/Users/seanjoudry/Documents/NSPoliDonations/my-csv-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react'\nimport { Helmet } from 'react-helmet'\nimport Papa from 'papaparse'\nimport { motion } from 'framer-motion'\nimport { Search } from 'lucide-react'\n\n// Local images from src/assets\nimport nspcLogo from './assets/nspc_logo.jpg'\nimport nsndpLogo from './assets/nsndp_logo.jpg'\nimport nslpLogo from './assets/nslp-logo.png'\nimport cpcLogo from './assets/cpclogo.png'\nimport ndpcaLogo from './assets/ndpcalogo.jpg'\nimport lpcLogo from './assets/lpclogo.jpg'\nimport icon from './assets/icon.png'\n\n/** Debounce hook to reduce lag when filtering large data */\nfunction useDebounce(value, delay = 300) {\n  const [debouncedValue, setDebouncedValue] = useState(value)\n  useEffect(() => {\n    const handler = setTimeout(() => setDebouncedValue(value), delay)\n    return () => clearTimeout(handler)\n  }, [value, delay])\n  return debouncedValue\n}\n\n/** Our final, unified columns in a fixed order. */\nconst allColumns = [\n  'Last Name',\n  'First Name',\n  'Postal Code',\n  'City',\n  'Party',\n  'Specific Campaign',\n  'Date',\n  'Donation',\n]\n\nexport default function App() {\n  const [csvData, setCsvData] = useState([])\n  const [searchTerm, setSearchTerm] = useState('')\n  const debouncedSearch = useDebounce(searchTerm, 300)\n\n  // Sorting state\n  const [sortConfig, setSortConfig] = useState({ key: null, order: 'asc' })\n\n  function handleSortClick(header) {\n    setSortConfig((prev) => {\n      if (prev.key === header) {\n        return { ...prev, order: prev.order === 'asc' ? 'desc' : 'asc' }\n      } else {\n        return { key: header, order: 'asc' }\n      }\n    })\n  }\n\n  // Parse & combine both CSVs in one useEffect\n  useEffect(() => {\n    // 1) Parse data.csv (the provincial file)\n    Papa.parse('./data.csv', {\n      download: true,\n      header: true,\n      skipEmptyLines: true,\n      complete: (provincialResults) => {\n        const provincialData = provincialResults.data.map((row) => ({\n          // For data.csv:\n          // Last Name, First Name, Town => City, Amount => Donation, Year => Date\n          'Last Name': row['Last Name'] || '',\n          'First Name': row['First Name'] || '',\n          'Postal Code': '', // No postal code in data.csv\n          City: row['Town'] || '', // rename 'Town' => 'City'\n          Party: row['Party'] || '',\n          'Specific Campaign': row['Specific Campaign'] || '',\n          Date: row['Year'] || '', // rename 'Year' => 'Date'\n          Donation: row['Amount'] || '', // rename 'Amount' => 'Donation'\n        }))\n\n        // 2) Parse federaldata.csv\n        Papa.parse('./federaldata.csv', {\n          download: true,\n          header: true,\n          skipEmptyLines: true,\n          complete: (federalResults) => {\n            const federalData = federalResults.data.map((row) => {\n              // Possibly shorten “Conservative Party of Canada” -> “CPC”\n              let party = row['Party'] || ''\n              if (party.includes('Conservative Party of Canada')) {\n                party = 'CPC'\n              }\n              if (party.includes('Liberal Party of Canada')) {\n                party = 'LPC'\n              }\n              if (party.includes('New Democratic Party')) {\n                party = 'NDP-CA'\n              }\n\n              let recipient = row['Recipient'] || ''\n              if (recipient.includes('Conservative Party of Canada')) {\n                recipient = 'CPC'\n              }\n              if (party.includes('Liberal Party of Canada')) {\n                party = 'LPC'\n              }\n              if (party.includes('New Democratic Party')) {\n                party = 'NDP-CA'\n              }\n\n              return {\n                // For federaldata.csv:\n                // Date_received => Date, Monetary => Donation\n                'Last Name': row['Last Name'] || '',\n                'First Name': row['First Name'] || '',\n                'Postal Code': row['Postal Code'] || '',\n                City: row['City'] || '',\n                Party: party,\n                'Specific Campaign': recipient,\n                Date: row['Date_received'] || '',\n                Donation: row['Monetary'] || '',\n              }\n            })\n\n            // Combine them\n            const combined = [...provincialData, ...federalData]\n            setCsvData(combined)\n          },\n        })\n      },\n    })\n  }, [])\n\n  // 1) Wrap sortData in a useCallback\n  const sortData = useCallback(\n    (data) => {\n      if (!sortConfig.key) return data\n      const { key, order } = sortConfig\n      const sorted = [...data].sort((a, b) => {\n        let aVal = a[key] ?? ''\n        let bVal = b[key] ?? ''\n\n        // numeric parse attempt\n        const aNum = parseFloat(String(aVal).replace(/[$,]/g, ''))\n        const bNum = parseFloat(String(bVal).replace(/[$,]/g, ''))\n        const isNumericA = !isNaN(aNum)\n        const isNumericB = !isNaN(bNum)\n        if (isNumericA && isNumericB) {\n          return order === 'asc' ? aNum - bNum : bNum - aNum\n        } else {\n          // string compare\n          aVal = aVal.toLowerCase()\n          bVal = bVal.toLowerCase()\n          if (aVal < bVal) return order === 'asc' ? -1 : 1\n          if (aVal > bVal) return order === 'asc' ? 1 : -1\n          return 0\n        }\n      })\n      return sorted\n    },\n    [sortConfig]\n  )\n\n  function getRowColor(partyValue = '') {\n    const p = partyValue.toLowerCase()\n\n    // EXACT matches\n    if (p === 'cpc') return '#639ee0'\n    if (p === 'lpc') return '#9d0001'\n    if (p === 'pc') return '#00becf'\n\n    // partial matches\n    if (p.includes('liberal')) return 'red'\n    if (p.includes('ndp')) return 'orange'\n    if (p.includes('green')) return 'green'\n    if (p.includes('atlantica')) return 'purple'\n    return ''\n  }\n\n  // 1) Extended getPartyTotals with explicit checks for nsndp, ndp-ca, ndp\nfunction getPartyTotals(data) {\n  // Add nsndp and ndp to the totals object\n  const totals = {\n    pc: 0,\n    cpc: 0,\n    nsndp: 0,  // for exactly 'nsndp'\n    ndp: 0,    // for exactly 'ndp'\n    ndpca: 0,  // for exactly 'ndp-ca'\n    liberal: 0,\n    lpc: 0\n  }\n\n  data.forEach((row) => {\n    const amountStr = row['Donation'] || '0'\n    const amount = parseFloat(amountStr.replace(/[$,]/g, '')) || 0\n    const p = (row['Party'] || '').toLowerCase()\n\n    if (p === 'pc') {\n      totals.pc += amount\n    } else if (p === 'cpc') {\n      totals.cpc += amount\n    } else if (p === 'nsndp') {\n      totals.nsndp += amount\n    } else if (p === 'ndp-ca') {\n      totals.ndpca += amount\n    } else if (p === 'ndp') {\n      // strictly 'ndp' goes here\n      totals.ndp += amount\n    } else if (p.includes('liberal')) {\n      totals.liberal += amount\n    } else if (p.includes('lpc')) {\n      totals.lpc += amount\n    }\n  })\n\n  return totals\n}\n\n  // Filter by \"LastName FirstName\"\n  const filteredData = useMemo(() => {\n    if (!debouncedSearch) return []\n    const [lastNameSearch, firstNameSearch] = debouncedSearch\n      .split(/\\s+/, 2)\n      .map((s) => s.toLowerCase())\n\n    return csvData.filter((row) => {\n      const rowLast = (row['Last Name'] || '').toLowerCase()\n      const rowFirst = (row['First Name'] || '').toLowerCase()\n      if (!firstNameSearch) {\n        return rowLast.includes(lastNameSearch)\n      } else {\n        return (\n          rowLast.includes(lastNameSearch) &&\n          rowFirst.includes(firstNameSearch)\n        )\n      }\n    })\n  }, [debouncedSearch, csvData])\n\n  // 2) UseMemo depends on [filteredData, sortData]\n  const sortedFilteredData = useMemo(() => {\n    return sortData(filteredData)\n  }, [filteredData, sortData])\n\n  // Totals\n  const partyTotals = useMemo(() => getPartyTotals(sortedFilteredData), [sortedFilteredData])\n\n  return (\n    <div className=\"min-h-screen w-full p-6 flex flex-col items-center text-white bg-gradient-to-b from-blue-900 to-gray-900\">\n      <Helmet>\n        <title>NSPoli Donors</title>\n        <meta name=\"description\" content=\"Search through political donations in Nova Scotia\" />\n        <link rel=\"icon\" type=\"image/png\" href={icon} />\n        <meta name=\"robots\" content=\"noindex, nofollow\" />\n      </Helmet>\n\n      <motion.h1\n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"text-4xl font-extrabold mb-8\"\n      >\n        NSPOLI Donors\n      </motion.h1>\n\n      {/* Main card */}\n      <div className=\"w-full max-w-5xl bg-white text-gray-800 rounded-2xl shadow-xl p-6 flex flex-col gap-6\">\n        {/* Search */}\n        <div className=\"relative\">\n          <Search className=\"absolute left-3 top-3 text-gray-400\" size={20} />\n          <input\n            type=\"text\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            placeholder=\"Enter 'LastName FirstName'\"\n            className=\"pl-10 pr-4 py-2 w-full border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400\"\n          />\n        </div>\n\n        {/* Table */}\n        {debouncedSearch && (\n          <div className=\"overflow-auto border border-gray-200 rounded-md\">\n            <table className=\"min-w-full text-left\">\n              <thead className=\"bg-gray-100 border-b border-gray-200\">\n                <tr>\n                  {allColumns.map((header) => (\n                    <th\n                      key={header}\n                      onClick={() => handleSortClick(header)}\n                      className=\"px-4 py-2 text-gray-700 font-semibold cursor-pointer select-none\"\n                    >\n                      {header}\n                      {sortConfig.key === header && (\n                        <span className=\"ml-1 text-xs\">\n                          {sortConfig.order === 'asc' ? '▲' : '▼'}\n                        </span>\n                      )}\n                    </th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {sortedFilteredData.map((row, index) => {\n                  const partyValue = row['Party'] || ''\n                  return (\n                    <tr\n                      key={index}\n                      className=\"border-b hover:bg-gray-50 transition-colors\"\n                      style={{ backgroundColor: getRowColor(partyValue) || undefined }}\n                    >\n                      {allColumns.map((col) => (\n                        <td key={col} className=\"px-4 py-2\">\n                          {row[col] ?? ''}\n                        </td>\n                      ))}\n                    </tr>\n                  )\n                })}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n\n      {/* Summary card */}\n      {debouncedSearch && (\n  <div className=\"mt-6 w-full max-w-3xl bg-white text-gray-800 rounded-2xl shadow-xl p-6\">\n    <h2 className=\"text-lg font-bold mb-4\">Total Amount Donated</h2>\n    <div className=\"space-y-4\">\n      {/* PC */}\n      <div className=\"flex items-center\">\n        <img src={nspcLogo} alt=\"PC Party Logo\" className=\"w-10 h-10 rounded-full mr-3\" />\n        <span className=\"font-semibold\">PC:</span>\n        <span className=\"ml-2\">${partyTotals.pc.toFixed(2)}</span>\n      </div>\n\n      {/* CPC */}\n      <div className=\"flex items-center\">\n        <img src={cpcLogo} alt=\"CPC Logo\" className=\"w-10 h-10 rounded-full mr-3\" />\n        <span className=\"font-semibold\">CPC:</span>\n        <span className=\"ml-2\">${partyTotals.cpc.toFixed(2)}</span>\n      </div>\n\n      {/* NSNDP */}\n      <div className=\"flex items-center\">\n        <img src={nsndpLogo} alt=\"NSNDP Logo\" className=\"w-10 h-10 rounded-full mr-3\" />\n        <span className=\"font-semibold\">NSNDP:</span>\n        <span className=\"ml-2\">${partyTotals.nsndp.toFixed(2)}</span>\n      </div>\n\n      {/* NDPCA */}\n      <div className=\"flex items-center\">\n        <img src={ndpcaLogo} alt=\"NDPCA Logo\" className=\"w-10 h-10 rounded-full mr-3\" />\n        <span className=\"font-semibold\">NDPCA:</span>\n        <span className=\"ml-2\">${partyTotals.ndpca.toFixed(2)}</span>\n      </div>\n\n      {/* Liberal */}\n      <div className=\"flex items-center\">\n        <img src={nslpLogo} alt=\"Liberal Logo\" className=\"w-10 h-10 rounded-full mr-3\" />\n        <span className=\"font-semibold\">Liberal:</span>\n        <span className=\"ml-2\">${partyTotals.liberal.toFixed(2)}</span>\n      </div>\n\n      {/* LPC */}\n      <div className=\"flex items-center\">\n        <img src={lpcLogo} alt=\"LPC Logo\" className=\"w-10 h-10 rounded-full mr-3\" />\n        <span className=\"font-semibold\">LPC:</span>\n        <span className=\"ml-2\">${partyTotals.lpc.toFixed(2)}</span>\n      </div>\n    </div>\n  </div>\n)}\n\n\n      <div className=\"text-sm text-center mt-6\">\n        <p>\n          Collected from Elections Nova Scotia covering from 2005-2024. Only donations\n          of $200 or more are publicly reported from 2010 onward. Federal data from 2016-2024. Note there may be duplicate records in federal data.\n        </p>\n        <p className=\"mt-1\">\n          Type your Last Name followed by a space, then First Name. Click table headers\n          to sort.\n        </p>\n      </div>\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}